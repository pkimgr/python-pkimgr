# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - Checks
  - Build

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt

.tox_lint:
  stage: Checks
  script:
    - pip install tox pylint flake8
    - tox -e pylint,flake8
  allow_failure: true

.tox_unittest:
  stage: Checks
  script:
    - pip install tox coverage
    - tox -e unittests,coverage
  allow_failure: true

tox_lint_38:
  extends: ".tox_lint"
  image: python:3.8
tox_lint_39:
  extends: ".tox_lint"
  image: python:3.9
tox_lint_310:
  extends: ".tox_lint"
  image: python:3.10

tox_unittest_38:
  extends: ".tox_unittest"
  image: python:3.8
tox_unittest_39:
  extends: ".tox_unittest"
  image: python:3.9
tox_unittest_310:
  extends: ".tox_unittest"
  image: python:3.10

update_patch:
  stage: Build
  script:
    - pip install bump2version
    - export PYTHONPATH=./src:$PYTHONPATH
    - git config --global user.email "${GITLAB_USER_MAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git remote set-url origin "https://gitlab-ci-token:${CI_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
    - python setup.py bdist_wheel
    - bump2version patch
    - git push -o ci.skip --tags origin HEAD:${CI_COMMIT_REF_NAME}
  artifacts:
    paths:
      - dist/*/whl
  only:
    - feature*

update_minor:
  stage: Build
  script:
    - pip install bump2version
    - export PYTHONPATH=./src:$PYTHONPATH
    - git config --global user.email "${GITLAB_USER_MAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git remote set-url origin "https://gitlab-ci-token:${CI_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
    - python setup.py bdist_wheel
    - bump2version minor
    - git push -o ci.skip --tags origin HEAD:${CI_COMMIT_REF_NAME}
  artifacts:
    paths:
      - dist/*.whl
  only:
    - develop

new_tag:
  stage: Build
  script:
    - pip install bump2version setuptools wheel
    - export PYTHONPATH=./src:$PYTHONPATH
    - git config --global user.email "${GITLAB_USER_MAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git remote set-url origin "https://gitlab-ci-token:${CI_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
    - bump2version --tag --tag-message 'Release v{new_version}' major
    - python setup.py bdist_wheel
    - git push -o ci.skip --tags origin HEAD:${CI_COMMIT_REF_NAME}
  artifacts:
    paths:
      - dist/*.whl
  only:
    - stable

